[ INFO:0] Initialize OpenCL runtime...
OpenCV(OpenCL:0): clGetPlatformIDs_pfn(0, 0, &numPlatforms)
OpenCV(OpenCL:0): clGetPlatformIDs_pfn(numPlatforms, &platforms[0], &numPlatforms)
OpenCV(OpenCL:0): getStringInfo(clGetDeviceInfo_pfn, devices[i], 0x102B, name)
OpenCV(OpenCL:0): clGetDeviceInfo_pfn(d, 0x1031, sizeof(cl_platform_id), &pl, 0)
OpenCV(OpenCL:0): clCreateContext
OpenCV(OpenCL:0): clCreateBuffer(capacity=4096) => 000002697DFF6F80
OpenCV(OpenCL:0): handle = clCreateCommandQueue_pfn(ch, dh, props, &retval)
OpenCV(OpenCL:0): clEnqueueWriteBuffer(q, handle=000002697DFF6F80, CL_TRUE, offset=0, sz=3136, data=000002697E427080, 0, 0, 0)
OpenCV(OpenCL:0): clCreateBuffer(capacity=4096) => 000002697DFF60A0
OpenCV(OpenCL:0): clEnqueueWriteBuffer(q, handle=000002697DFF60A0, CL_TRUE, offset=0, sz=3136, data=000002697E6B7F40, 0, 0, 0)
OpenCV(OpenCL:0): clCreateBuffer(capacity=4096) => 000002697DFF6D60
OpenCV(OpenCL:0): clEnqueueWriteBuffer(q, handle=000002697DFF6D60, CL_TRUE, offset=0, sz=16, data=000002697E6AD8D0, 0, 0, 0)
OpenCV(OpenCL:0): clCreateBuffer(capacity=4096) => 000002697DFF62C0
OpenCV(OpenCL:0): clEnqueueWriteBuffer(q, handle=000002697DFF62C0, CL_TRUE, offset=0, sz=16, data=000002697E6AD920, 0, 0, 0)
OpenCV(OpenCL:0): clCreateBuffer(capacity=4096) => 000002697DFF7800
OpenCV(OpenCL:0): clEnqueueWriteBuffer(q, handle=000002697DFF7800, CL_TRUE, offset=0, sz=16, data=000002697E6AD510, 0, 0, 0)
OpenCV(OpenCL:0): clCreateBuffer(capacity=4096) => 000002697DFF6700
OpenCV(OpenCL:0): clEnqueueWriteBuffer(q, handle=000002697DFF6700, CL_TRUE, offset=0, sz=512, data=000002697E387B80, 0, 0, 0)
OpenCV(OpenCL:0): clCreateBuffer(capacity=4096) => 000002697DFF64E0
OpenCV(OpenCL:0): clEnqueueWriteBuffer(q, handle=000002697DFF64E0, CL_TRUE, offset=0, sz=4, data=000002697E6C0180, 0, 0, 0)
[ INFO:0] Successfully initialized OpenCL cache directory: C:\Users\summer\AppData\Local\Temp\opencv\4.0-pre\opencl_cache\
[ INFO:0] Preparing OpenCL cache configuration for context: NVIDIA_Corporation--Quadro_M1000M--385_73
OpenCV(OpenCL:0): clBuildProgram(binary: dnn/permute)
OpenCV(OpenCL:0): result = clGetProgramBuildInfo_pfn(handle, devices[0], 0x1181, sizeof(build_status), &build_status, &retsz)
OpenCV(OpenCL:0): clCreateKernel('permute')
OpenCV(OpenCL:0): clSetKernelArg('permute', arg_index=0, size=4, value=000000B508CFDF44)
OpenCV(OpenCL:0): clSetKernelArg('permute', arg_index=1, cl_mem=000002697DFF6F80)
OpenCV(OpenCL:0): clSetKernelArg('permute', arg_index=2, cl_mem=000002697DFF6D60)
OpenCV(OpenCL:0): clSetKernelArg('permute', arg_index=3, cl_mem=000002697DFF62C0)
OpenCV(OpenCL:0): clSetKernelArg('permute', arg_index=4, cl_mem=000002697DFF7800)
OpenCV(OpenCL:0): clSetKernelArg('permute', arg_index=5, size=4, value=000000B508CFDFE8)
OpenCV(OpenCL:0): clSetKernelArg('permute', arg_index=6, cl_mem=000002697DFF60A0)
OpenCV(OpenCL:0): clEnqueueNDRangeKernel('permute', dims=1, globalsize=832x1x1, localsize=NULL) sync=false
OpenCV(OpenCL:0): clSetEventCallback(asyncEvent, CL_COMPLETE, oclCleanupCallback, this)
OpenCV(OpenCL:0): clReleaseEvent_pfn(asyncEvent)
OpenCV(OpenCL:0): clCreateBuffer(capacity=401408) => 000002697DFF5C60
OpenCV(OpenCL:0): clEnqueueWriteBuffer(q, handle=000002697DFF5C60, CL_TRUE, offset=0, sz=401408, data=0000026978982180, 0, 0, 0)
OpenCV(OpenCL:0): clCreateBuffer(capacity=4096) => 000002697DFF6920
OpenCV(OpenCL:0): clEnqueueWriteBuffer(q, handle=000002697DFF6920, CL_TRUE, offset=0, sz=512, data=0000026976A68C80, 0, 0, 0)
OpenCV(OpenCL:0): clBuildProgram(binary: dnn/matvec_mul)
OpenCV(OpenCL:0): result = clGetProgramBuildInfo_pfn(handle, devices[0], 0x1181, sizeof(build_status), &build_status, &retsz)
OpenCV(OpenCL:0): clCreateKernel('matvec_mul4_float')
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=0, cl_mem=000002697DFF5C60)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=1, size=4, value=000000B508CFCE68)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=2, size=4, value=000000B508CFCB14)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=3, size=4, value=000000B508CFCC60)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=4, cl_mem=000002697DFF60A0)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=5, size=4, value=000000B508CFCE78)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=6, size=4, value=000000B508CFCE58)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=7, size=4, value=000000B508CFCE80)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=8, cl_mem=000002697DFF6700)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=9, size=4, value=000000B508CFCE90)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=10, size=2048, value=0000000000000000)
OpenCV(OpenCL:0): clEnqueueNDRangeKernel('matvec_mul4_float', dims=1, globalsize=4096x1x1, localsize=128x1x1) sync=false
OpenCV(OpenCL:0): clSetEventCallback(asyncEvent, CL_COMPLETE, oclCleanupCallback, this)
OpenCV(OpenCL:0): clReleaseEvent_pfn(asyncEvent)
OpenCV(OpenCL:0): clReleaseKernel_pfn(handle)
OpenCV(OpenCL:0): clBuildProgram(binary: dnn/math)
OpenCV(OpenCL:0): result = clGetProgramBuildInfo_pfn(handle, devices[0], 0x1181, sizeof(build_status), &build_status, &retsz)
OpenCV(OpenCL:0): clCreateKernel('axpy_float')
OpenCV(OpenCL:0): clSetKernelArg('axpy_float', arg_index=0, size=4, value=000000B508CFCE40)
OpenCV(OpenCL:0): clSetKernelArg('axpy_float', arg_index=1, size=4, value=000000B508CFCE48)
OpenCV(OpenCL:0): clSetKernelArg('axpy_float', arg_index=2, cl_mem=000002697DFF6920)
OpenCV(OpenCL:0): clSetKernelArg('axpy_float', arg_index=3, size=4, value=000000B508CFCE58)
OpenCV(OpenCL:0): clSetKernelArg('axpy_float', arg_index=4, cl_mem=000002697DFF6700)
OpenCV(OpenCL:0): clSetKernelArg('axpy_float', arg_index=5, size=4, value=000000B508CFCE68)
OpenCV(OpenCL:0): clEnqueueNDRangeKernel('axpy_float', dims=1, globalsize=16384x1x1, localsize=128x1x1) sync=false
OpenCV(OpenCL:0): clSetEventCallback(asyncEvent, CL_COMPLETE, oclCleanupCallback, this)
OpenCV(OpenCL:0): clReleaseEvent_pfn(asyncEvent)
OpenCV(OpenCL:0): clReleaseKernel_pfn(handle)
OpenCV(OpenCL:0): clBuildProgram(binary: dnn/activations)
OpenCV(OpenCL:0): result = clGetProgramBuildInfo_pfn(handle, devices[0], 0x1181, sizeof(build_status), &build_status, &retsz)
OpenCV(OpenCL:0): clCreateKernel('ReLUForward')
OpenCV(OpenCL:0): clSetKernelArg('ReLUForward', arg_index=0, size=4, value=000000B508CFE0A8)
OpenCV(OpenCL:0): clSetKernelArg('ReLUForward', arg_index=1, cl_mem=000002697DFF6700)
OpenCV(OpenCL:0): clSetKernelArg('ReLUForward', arg_index=2, cl_mem=000002697DFF6700)
OpenCV(OpenCL:0): clEnqueueNDRangeKernel('ReLUForward', dims=1, globalsize=128x1x1, localsize=NULL) sync=false
OpenCV(OpenCL:0): clSetEventCallback(asyncEvent, CL_COMPLETE, oclCleanupCallback, this)
OpenCV(OpenCL:0): clReleaseEvent_pfn(asyncEvent)
OpenCV(OpenCL:0): clReleaseKernel_pfn(handle)
OpenCV(OpenCL:0): clCreateBuffer(capacity=8192) => 000002697DFF6B40
OpenCV(OpenCL:0): clEnqueueWriteBuffer(q, handle=000002697DFF6B40, CL_TRUE, offset=0, sz=5120, data=0000026976A20980, 0, 0, 0)
OpenCV(OpenCL:0): clCreateBuffer(capacity=4096) => 000002697E73D420
OpenCV(OpenCL:0): clEnqueueWriteBuffer(q, handle=000002697E73D420, CL_TRUE, offset=0, sz=40, data=0000026976A567C0, 0, 0, 0)
OpenCV(OpenCL:0): clCreateKernel('matvec_mul4_float')
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=0, cl_mem=000002697DFF6B40)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=1, size=4, value=000000B508CFCE68)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=2, size=4, value=000000B508CFCB14)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=3, size=4, value=000000B508CFCC60)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=4, cl_mem=000002697DFF6700)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=5, size=4, value=000000B508CFCE78)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=6, size=4, value=000000B508CFCE58)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=7, size=4, value=000000B508CFCE80)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=8, cl_mem=000002697DFF60A0)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=9, size=4, value=000000B508CFCE90)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul4_float', arg_index=10, size=2048, value=0000000000000000)
OpenCV(OpenCL:0): clEnqueueNDRangeKernel('matvec_mul4_float', dims=1, globalsize=256x1x1, localsize=128x1x1) sync=false
OpenCV(OpenCL:0): clSetEventCallback(asyncEvent, CL_COMPLETE, oclCleanupCallback, this)
OpenCV(OpenCL:0): clReleaseEvent_pfn(asyncEvent)
OpenCV(OpenCL:0): clReleaseKernel_pfn(handle)
OpenCV(OpenCL:0): clCreateKernel('matvec_mul1_float')
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul1_float', arg_index=0, cl_mem=000002697DFF6B40)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul1_float', arg_index=1, size=4, value=000000B508CFCE68)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul1_float', arg_index=2, size=4, value=000000B508CFCB14)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul1_float', arg_index=3, size=4, value=000000B508CFCC14)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul1_float', arg_index=4, size=4, value=000000B508CFCCE8)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul1_float', arg_index=5, cl_mem=000002697DFF6700)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul1_float', arg_index=6, size=4, value=000000B508CFCE78)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul1_float', arg_index=7, size=4, value=000000B508CFCE58)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul1_float', arg_index=8, size=4, value=000000B508CFCE80)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul1_float', arg_index=9, cl_mem=000002697DFF60A0)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul1_float', arg_index=10, size=4, value=000000B508CFCE90)
OpenCV(OpenCL:0): clSetKernelArg('matvec_mul1_float', arg_index=11, size=512, value=0000000000000000)
OpenCV(OpenCL:0): clEnqueueNDRangeKernel('matvec_mul1_float', dims=1, globalsize=256x1x1, localsize=128x1x1) sync=false
OpenCV(OpenCL:0): clSetEventCallback(asyncEvent, CL_COMPLETE, oclCleanupCallback, this)
OpenCV(OpenCL:0): clReleaseEvent_pfn(asyncEvent)
OpenCV(OpenCL:0): clCreateKernel('axpy_float')
OpenCV(OpenCL:0): clSetKernelArg('axpy_float', arg_index=0, size=4, value=000000B508CFCE40)
OpenCV(OpenCL:0): clSetKernelArg('axpy_float', arg_index=1, size=4, value=000000B508CFCE48)
OpenCV(OpenCL:0): clSetKernelArg('axpy_float', arg_index=2, cl_mem=000002697E73D420)
OpenCV(OpenCL:0): clSetKernelArg('axpy_float', arg_index=3, size=4, value=000000B508CFCE58)
OpenCV(OpenCL:0): clSetKernelArg('axpy_float', arg_index=4, cl_mem=000002697DFF60A0)
OpenCV(OpenCL:0): clSetKernelArg('axpy_float', arg_index=5, size=4, value=000000B508CFCE68)
OpenCV(OpenCL:0): clEnqueueNDRangeKernel('axpy_float', dims=1, globalsize=16384x1x1, localsize=128x1x1) sync=false
OpenCV(OpenCL:0): clSetEventCallback(asyncEvent, CL_COMPLETE, oclCleanupCallback, this)
OpenCV(OpenCL:0): clReleaseEvent_pfn(asyncEvent)
OpenCV(OpenCL:0): clCreateBuffer(capacity=4096) => 000002697E73DCA0
OpenCV(OpenCL:0): clBuildProgram(binary: dnn/softmax)
OpenCV(OpenCL:0): result = clGetProgramBuildInfo_pfn(handle, devices[0], 0x1181, sizeof(build_status), &build_status, &retsz)
OpenCV(OpenCL:0): clCreateKernel('kernel_channel_max')
OpenCV(OpenCL:0): clCreateKernel('kernel_channel_subtract')
OpenCV(OpenCL:0): clCreateKernel('kernel_channel_sum')
OpenCV(OpenCL:0): clCreateKernel('kernel_channel_div')
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_max', arg_index=0, size=4, value=000000B508CFDD68)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_max', arg_index=1, size=4, value=000000B508CFDD64)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_max', arg_index=2, size=4, value=000000B508CFDD60)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_max', arg_index=3, cl_mem=000002697DFF60A0)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_max', arg_index=4, cl_mem=000002697DFF64E0)
OpenCV(OpenCL:0): clEnqueueNDRangeKernel('kernel_channel_max', dims=1, globalsize=1x1x1, localsize=NULL) sync=false
OpenCV(OpenCL:0): clSetEventCallback(asyncEvent, CL_COMPLETE, oclCleanupCallback, this)
OpenCV(OpenCL:0): clReleaseEvent_pfn(asyncEvent)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_subtract', arg_index=0, size=4, value=000000B508CFDE04)
OpenCV(OpenCL:0OpenCV(OpenCL:): OpenCV(OpenCL:clReleaseKernel_pfn(handle)00
OpenCV(OpenCL:): 0clReleaseKernel_pfn(handle)): ): 
clReleaseKernel_pfn(handle)clSetKernelArg('kernel_channel_subtract', arg_index=1, size=4, value=000000B508CFDE00)

OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_subtract', arg_index=2, size=4, value=000000B508CFDDFC)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_subtract', arg_index=3, size=4, value=000000B508CFDDF8)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_subtract', arg_index=4, cl_mem=000002697DFF64E0)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_subtract', arg_index=5, cl_mem=000002697DFF60A0)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_subtract', arg_index=6, cl_mem=000002697DFF6700)
OpenCV(OpenCL:0): clEnqueueNDRangeKernel('kernel_channel_subtract', dims=1, globalsize=64x1x1, localsize=NULL) sync=false
OpenCV(OpenCL:0): clSetEventCallback(asyncEvent, CL_COMPLETE, oclCleanupCallback, this)
OpenCV(OpenCL:0): clReleaseEvent_pfn(asyncEvent)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_sum', arg_index=0, size=4, value=000000B508CFDE78)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_sum', arg_index=1, size=4, value=000000B508CFDE74)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_sum', arg_index=2, size=4, value=000000B508CFDE70)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_sum', arg_index=3, cl_mem=000002697DFF6700)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_sum', arg_index=4, cl_mem=000002697DFF64E0)
OpenCV(OpenCL:0): clEnqueueNDRangeKernel('kernel_channel_sum', dims=1, globalsize=1x1x1, localsize=NULL) sync=false
OpenCV(OpenCL:0): clSetEventCallback(asyncEvent, CL_COMPLETE, oclCleanupCallback, this)
OpenCV(OpenCL:0): clReleaseEvent_pfn(asyncEvent)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_div', arg_index=0, size=4, value=000000B508CFDEEC)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_div', arg_index=1, size=4, value=000000B508CFDEE8)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_div', arg_index=2, size=4, value=000000B508CFDEE4)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_div', arg_index=3, size=4, value=000000B508CFDEE0)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_div', arg_index=4, cl_mem=000002697DFF64E0)
OpenCV(OpenCL:0): clSetKernelArg('kernel_channel_div', arg_index=5, cl_mem=000002697DFF6700)
OpenCV(OpenCL:0): clEnqueueNDRangeKernel('kernel_channel_div', dims=1, globalsize=64x1x1, localsize=NULL) sync=false
OpenCV(OpenCL:0): clSetEventCallback(asyncEvent, CL_COMPLETE, oclCleanupCallback, this)
OpenCV(OpenCL:0): clReleaseEvent_pfn(asyncEvent)
OpenCV(OpenCL:0): clEnqueueReadBufferRect(q, (cl_mem)u->handle, CL_TRUE, new_srcofs, new_dstofs, new_sz, new_srcstep[0], 0, new_dststep[0], 0, ptr, 0, 0, 0)
result: [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
OpenCV(OpenCL:0): clReleaseMemObject_pfn(entry.clBuffer_)
OpenCV(OpenCL:0): clReleaseMemObject_pfn(entry.clBuffer_)
OpenCV(OpenCL:0): clReleaseMemObject_pfn(entry.clBuffer_)
OpenCV(OpenCL:0): clReleaseMemObject_pfn(entry.clBuffer_)
OpenCV(OpenCL:0): clReleaseMemObject_pfn(entry.clBuffer_)
OpenCV(OpenCL:0): clReleaseMemObject_pfn(entry.clBuffer_)
OpenCV(OpenCL:0): clReleaseMemObject_pfn(entry.clBuffer_)
OpenCV(OpenCL:0): clReleaseMemObject_pfn(entry.clBuffer_)
OpenCV(OpenCL:0): clReleaseMemObject_pfn(entry.clBuffer_)
